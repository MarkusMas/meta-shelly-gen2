{ "name":"Shelly Plus 2PM (Mode: Switch)", 
  "manufacturer":"Shelly",
  "version":2,
  "compatible-meta":"1.0.5",
  "type":"MUSICPLAYER",
  "persistedvariables":{
    "IsRegistered": false,
    "ToInitiate": true,
    "MyDevices":"[]"
  },
  "variables":{
    "NewDevice":"[]",
    "NewUri": "",
    "NewPort":"",
    "CompatibleModel":"[\"SNSW-002P16EU\", \"SNSW-102P16EU\"]",
    "CompatibleProfile":"switch"
  },
  "discover": {
    "welcomeheadertext": "Shelly Plus 2PM in Switch Mode",
    "welcomedescription":"powered by meta v2 \n by JAC459 \n X \n Driver Development \n by MarkusM",
    "initcommandset":[{
      "label":"",
      "type":"static",
      "command":"$RegistrationCode",
      "queryresult":"",
      "evalwrite":[
        {"variable":"NewDevice", "value":"DYNAMIK let device = {\"ip\":\"\", \"port\":\"\", \"model\":\"\", \"name\":\"\", \"mac_address\":\"\", \"profile\":\"\", \"auth_en\":\"\" }; device.ip = \"$Result\".split(\":\")[0]; device.port = (\"$Result\".split(\":\")[1]!=undefined?\"$Result\".split(\":\")[1]:\"80\"); JSON.stringify(device); "},
        {"variable":"NewUri",    "value":"DYNAMIK \"$Result\".split(\":\")[0] "},
        {"variable":"NewPort",   "value":"DYNAMIK \"$Result\".split(\":\")[1]!=undefined?\"$Result\".split(\":\")[1]:\"80\"; "}
      ]
      },{
      "type":"http-get",
      "command": "http://$NewUri:$NewPort/rpc/Shelly.GetDeviceInfo",
      "queryresult" : "$.",
      "evalwrite":[
        {"variable":"NewDevice", "value":"DYNAMIK let device = $NewDevice; device.name = (JSON.parse(\"$Result\").name == null ? \"Shelly Plus 2PM \"+device.ip : JSON.parse(\"$Result\").name); device.model = JSON.parse(\"$Result\").model; device.mac_address=JSON.parse(\"$Result\").mac; device.profile=JSON.parse(\"$Result\").profile; device.auth_en=JSON.parse(\"$Result\").auth_en; JSON.stringify(device); "},
        {"variable":"MyDevices", "value":"DYNAMIK let device = $NewDevice; let mydevices = $MyDevices; device?.name != undefined && $CompatibleModel.includes(device?.model) && \"$CompatibleProfile\" == device?.profile && device?.auth_en == false ? ( (mydevices=mydevices || []).some(i=>i.ip==device.ip) ? mydevices[mydevices.findIndex(i=>i.ip==device.ip)]=device : mydevices.push(device) ) : mydevices ; JSON.stringify(mydevices); "}
      ],
      "evaldo":[{"test":"DYNAMIK let device = $NewDevice; $CompatibleModel.includes(device?.model) && \"$CompatibleProfile\" == device?.profile && device?.auth_en == false; ","then":"__PERSIST", "or":""}]
      }],
      "command": {"type": "static", "command": "$MyDevices", "queryresult": "$.*"}
  },
  "register":{
    "registerheadertext": "Shelly",
    "registerdescription": "Please enter the IP Adress of your Shelly device. \n For example: 192.168.178.1 \n Port 80 is used by default. Add the port if different.",
    "command": {"type": "static", "command": ".", "queryresult": "$.*"}
  },
  "template":{
    "dynamicname":"DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").name DYNAMIK_INST_END",
    "dynamicid":  "DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").ip   DYNAMIK_INST_END",
    "variables":{
      "ShellyURI": "DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").ip   DYNAMIK_INST_END",
      "ShellyPort":"DYNAMIK_INST_START DYNAMIK JSON.parse(\"$Result\").port DYNAMIK_INST_END",
      "AsyncMessage":"",
      "Switch0Output":false,
      "Switch1Output":false,
      "Switch0Status":"{\"apower\" : \"\", \"current\" : \"\", \"voltage\" : \"\"}",
      "Switch1Status":"{\"apower\" : \"\", \"current\" : \"\", \"voltage\" : \"\"}",
      "Switch0Label":"",
      "Switch1Label":"",     
      "Switch0ActionLabel":"",
      "Switch1ActionLabel":"",
      "SwitchActuated":"none",
      "PrepActionStatus":"[]"
    },
    "listeners":{
      "SamsungListener": {"type":"webSocket", "command":{"connection":"ws://$ShellyURI:$ShellyPort/rpc", "message": "message"}, "queryresult" : "",
        "evalwrite":[
          {"variable":"AsyncMessage",      "value":"DYNAMIK \"$Result\" "},
          {"variable":"Switch0Output",     "value":"DYNAMIK let output = $Switch0Output; let params = $AsyncMessage.params ? $AsyncMessage.params['switch:0'] : $AsyncMessage.result; if (params && params.id === 0 && 'output' in params) {output = params.output;} else {$Switch0Output}"},
          {"variable":"Switch1Output",     "value":"DYNAMIK let output = $Switch1Output; let params = $AsyncMessage.params ? $AsyncMessage.params['switch:1'] : $AsyncMessage.result; if (params && params.id === 1 && 'output' in params) {output = params.output;} else {$Switch1Output}"},
          {"variable":"Switch0Status",     "value":"DYNAMIK let data =   $Switch0Status; let params = $AsyncMessage.params ? $AsyncMessage.params['switch:0'] : $AsyncMessage.result; if (params && params.id === 0) {if ('apower' in params) data.apower = params.apower; if ('current' in params) data.current = params.current; if ('voltage' in params) data.voltage = params.voltage;} data=JSON.stringify(data); "},
          {"variable":"Switch1Status",     "value":"DYNAMIK let data =   $Switch1Status; let params = $AsyncMessage.params ? $AsyncMessage.params['switch:1'] : $AsyncMessage.result; if (params && params.id === 1) {if ('apower' in params) data.apower = params.apower; if ('current' in params) data.current = params.current; if ('voltage' in params) data.voltage = params.voltage;} data=JSON.stringify(data); "},
          {"variable":"Switch0Label",      "value":"DYNAMIK ($Switch0Output ? \"ON - \" : \"OFF - \") + $Switch0Status.apower.toFixed(1) + \" W - \" + $Switch0Status.current.toFixed(3) + \" A - \" + $Switch0Status.voltage.toFixed(1) + \" V\" "},
          {"variable":"Switch1Label",      "value":"DYNAMIK ($Switch1Output ? \"ON - \" : \"OFF - \") + $Switch1Status.apower.toFixed(1) + \" W - \" + $Switch1Status.current.toFixed(3) + \" A - \" + $Switch1Status.voltage.toFixed(1) + \" V\" "},
          {"variable":"Switch0ActionLabel","value":"DYNAMIK let res; let prep; if ('result' in $AsyncMessage && 'was_on' in $AsyncMessage.result && $SwitchActuated == 0) {res = $AsyncMessage.result.was_on; prep = $PrepActionStatus; res ? prep[0] : (res==false ? prep[1] : prep[2] ) ;} else {\"$Switch0ActionLabel\"}"},
          {"variable":"Switch1ActionLabel","value":"DYNAMIK let res; let prep; if ('result' in $AsyncMessage && 'was_on' in $AsyncMessage.result && $SwitchActuated == 1) {res = $AsyncMessage.result.was_on; prep = $PrepActionStatus; res ? prep[0] : (res==false ? prep[1] : prep[2] ) ;} else {\"$Switch1ActionLabel\"}"}
        ]
      },
      "InitialGetStatus": {"type":"static", "command":"", "pooltime":"3000", "poolduration":"3000", "queryresult": "",
        "evaldo":[
          {"test":true, "then":"__GetStatus0", "or":""},
          {"test":true, "then":"__GetStatus1", "or":""}
        ]
      },
      "PollGetStatus": {"type":"static", "command":"", "pooltime":"60000", "poolduration":"", "queryresult": "",
        "evaldo":[
          {"test":true, "then":"__GetStatus0", "or":""},
          {"test":true, "then":"__GetStatus1", "or":""}
        ]
      }
    },
    "labels":{
      "StatusSwitch0": {"label":"SWITCH 0", "listen":"Switch0Label", "actionlisten":"Switch0ActionLabel"},
      "StatusSwitch1": {"label":"SWITCH 1", "listen":"Switch1Label", "actionlisten":"Switch1ActionLabel"}
    },
    "switches":{
      "Switch0": {"label":"SWITCH 0", "listen":"Switch0Output", "evaldo":[{"test":"DYNAMIK $Switch0Output", "then":"SWITCH 0 ON", "or":"SWITCH 0 OFF"}]},
      "Switch1": {"label":"SWITCH 1", "listen":"Switch1Output", "evaldo":[{"test":"DYNAMIK $Switch1Output", "then":"SWITCH 1 ON", "or":"SWITCH 1 OFF"}]}
    },
    "buttons":{
      "POWER ON":  {"label":"", "type":"static", "command":"", "evaldo":[{"test":true,"then":"__INITIALISE", "or":""}]},
      "POWER OFF": {"label":"", "type":"static", "command":"", "evaldo":[{"test":true,"then":"__CLEANUP",    "or":""}]},

      "__GetStatus0":    {"type":"webSocket", "command":{"connection":"ws://$ShellyURI:$ShellyPort/rpc", "message":{"id":2, "src":"neeo", "method":"Switch.GetStatus", "params":{"id":0}}}},
      "__GetStatus1":    {"type":"webSocket", "command":{"connection":"ws://$ShellyURI:$ShellyPort/rpc", "message":{"id":2, "src":"neeo", "method":"Switch.GetStatus", "params":{"id":1}}}},

      "SWITCH 0 ON":     {"type":"webSocket", "command":{"connection":"ws://$ShellyURI:$ShellyPort/rpc", "message":{"id":2, "src":"neeo", "method":"Switch.Set",    "params":{"id":0, "on":true}}  }, "evalwrite":[{"variable":"SwitchActuated", "value": "0"}, {"variable":"PrepActionStatus", "value":"[\"stays on\",   \"turned on\", \"Command failed\"]" }]},
      "SWITCH 0 OFF":    {"type":"webSocket", "command":{"connection":"ws://$ShellyURI:$ShellyPort/rpc", "message":{"id":2, "src":"neeo", "method":"Switch.Set",    "params":{"id":0, "on":false}} }, "evalwrite":[{"variable":"SwitchActuated", "value": "0"}, {"variable":"PrepActionStatus", "value":"[\"turned off\", \"stays off\", \"Command failed\"]" }]},
      "SWITCH 0 TOGGLE": {"type":"webSocket", "command":{"connection":"ws://$ShellyURI:$ShellyPort/rpc", "message":{"id":2, "src":"neeo", "method":"Switch.Toggle", "params":{"id":0}}             }, "evalwrite":[{"variable":"SwitchActuated", "value": "0"}, {"variable":"PrepActionStatus", "value":"[\"turned off\", \"turned on\", \"Command failed\"]" }]},

      "SWITCH 1 ON":     {"type":"webSocket", "command":{"connection":"ws://$ShellyURI:$ShellyPort/rpc", "message":{"id":2, "src":"neeo", "method":"Switch.Set",    "params":{"id":1, "on":true}}  }, "evalwrite":[{"variable":"SwitchActuated", "value": "1"}, {"variable":"PrepActionStatus", "value":"[\"stays on\",   \"turned on\", \"Command failed\"]" }]},
      "SWITCH 1 OFF":    {"type":"webSocket", "command":{"connection":"ws://$ShellyURI:$ShellyPort/rpc", "message":{"id":2, "src":"neeo", "method":"Switch.Set",    "params":{"id":1, "on":false}} }, "evalwrite":[{"variable":"SwitchActuated", "value": "1"}, {"variable":"PrepActionStatus", "value":"[\"turned off\", \"stays off\", \"Command failed\"]" }]},
      "SWITCH 1 TOGGLE": {"type":"webSocket", "command":{"connection":"ws://$ShellyURI:$ShellyPort/rpc", "message":{"id":2, "src":"neeo", "method":"Switch.Toggle", "params":{"id":1}}             }, "evalwrite":[{"variable":"SwitchActuated", "value": "1"}, {"variable":"PrepActionStatus", "value":"[\"turned off\", \"turned on\", \"Command failed\"]" }]}
    }
  }
}
